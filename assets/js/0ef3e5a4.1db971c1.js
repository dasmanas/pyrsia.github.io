"use strict";(self.webpackChunkpyrsia=self.webpackChunkpyrsia||[]).push([[7992],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return h}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(a),h=r,m=u["".concat(l,".").concat(h)]||u[h]||d[h]||i;return a?n.createElement(m,s(s({ref:t},c),{},{components:a})):n.createElement(m,s({ref:t},c))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,s=new Array(i);s[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var p=2;p<i;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},29515:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return d}});var n=a(87462),r=a(63366),i=(a(67294),a(3905)),s=["components"],o={custom_edit_url:"https://github.com/pyrsia/pyrsia/edit/main/docs/developers/pyrsia-architecture-and-use-cases.md"},l="Pyrsia architecture and use cases",p={unversionedId:"developers/pyrsia-architecture-and-use-cases",id:"developers/pyrsia-architecture-and-use-cases",title:"Pyrsia architecture and use cases",description:"Warning: This document is a work-in-progress.",source:"@site/docs/developers/pyrsia-architecture-and-use-cases.md",sourceDirName:"developers",slug:"/developers/pyrsia-architecture-and-use-cases",permalink:"/docs/developers/pyrsia-architecture-and-use-cases",draft:!1,editUrl:"https://github.com/pyrsia/pyrsia/edit/main/docs/developers/pyrsia-architecture-and-use-cases.md",tags:[],version:"current",frontMatter:{custom_edit_url:"https://github.com/pyrsia/pyrsia/edit/main/docs/developers/pyrsia-architecture-and-use-cases.md"},sidebar:"tutorialSidebar",previous:{title:"Developer's Hub",permalink:"/docs/developers/"},next:{title:"Glossary",permalink:"/docs/glossary"}},c={},d=[{value:"Concepts used in this document",id:"concepts-used-in-this-document",level:2},{value:"Introduction",id:"introduction",level:2},{value:"High level user stories",id:"high-level-user-stories",level:2},{value:"Pyrsia network overview",id:"pyrsia-network-overview",level:2},{value:"Pyrsia node architecture",id:"pyrsia-node-architecture",level:2},{value:"Package type ecosystems",id:"package-type-ecosystems",level:3},{value:"Pyrsia CLI API",id:"pyrsia-cli-api",level:3},{value:"Artifact Service",id:"artifact-service",level:3},{value:"p2p",id:"p2p",level:3},{value:"Transparency Log Service",id:"transparency-log-service",level:3},{value:"Blockchain",id:"blockchain",level:3},{value:"Build service",id:"build-service",level:3},{value:"Technical stories and details",id:"technical-stories-and-details",level:2}],u={toc:d};function h(e){var t=e.components,o=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"pyrsia-architecture-and-use-cases"},"Pyrsia architecture and use cases"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Warning:")," This document is a work-in-progress.")),(0,i.kt)("h2",{id:"concepts-used-in-this-document"},"Concepts used in this document"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Pyrsia network: a peer-to-peer network of interconnected nodes exchanging software\npackages and transparency logs."),(0,i.kt)("li",{parentName:"ul"},"Node: a process participating the Pyrsia network, either as an authorized node\nor a regular node."),(0,i.kt)("li",{parentName:"ul"},"Authorized node: a Node authorized to participate in the consensus algorithm to\nverify transactions"),(0,i.kt)("li",{parentName:"ul"},"Regular node: a Node using the network to download and validate software packages"),(0,i.kt)("li",{parentName:"ul"},"Transaction: an operation in the transparency log. e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"add_artifact"),",\n",(0,i.kt)("inlineCode",{parentName:"li"},"add_node"),", ..."),(0,i.kt)("li",{parentName:"ul"},"Consensus: consensus establishes the agreement between authorized nodes that a\ntransaction is valid."),(0,i.kt)("li",{parentName:"ul"},"Artifact: a single file that can be retrieved from the Pyrsia network. It does\nnot necessarily coincide with package specific artifacts."),(0,i.kt)("li",{parentName:"ul"},"Authorized node admin: the person who can administer an authorized node")),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"The Pyrsia network's first aim is to distribute software packages without central\nauthority. Instead, it relies on a set of designated authorized nodes that reach\nconsensus about the publication of software packages."),(0,i.kt)("p",null,"Those software packages originate from a source repository with build instructions.\nAll authorized nodes perform the necessary build steps and reach consensus if the\nproduced build is identical (or at least identical for the parts that matter)."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note"),": The Docker build pipeline will leverage Docker Hub builds for the\nofficial Docker images."),(0,i.kt)("p",null,"The Pyrsia network also distributes transparency logs so every node in the network\ncan verify a downloaded artifact."),(0,i.kt)("h2",{id:"high-level-user-stories"},"High level user stories"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"As a user I can use Docker client to pull an official Docker image from the Pyrsia\nnetwork."),(0,i.kt)("li",{parentName:"ul"},"As a user I can use a Java build tool like Maven to download Maven artifacts from\nthe Pyrsia network."),(0,i.kt)("li",{parentName:"ul"},"As a user I can use the Pyrsia CLI to show the transparency log based on search\nparameters."),(0,i.kt)("li",{parentName:"ul"},"New authorized nodes can be added to the Pyrsia network."),(0,i.kt)("li",{parentName:"ul"},"As a user I can request a build from source of a specific artifact, so it is\nadded to the Pyrsia network.")),(0,i.kt)("h2",{id:"pyrsia-network-overview"},"Pyrsia network overview"),(0,i.kt)("p",null,"The following diagram shows three authorized nodes, each with their own build pipelines.\nIn a real network, we expect tens or even hundreds of authorized nodes."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Pyrsia component diagram",src:a(81054).Z,width:"1481",height:"1299"})),(0,i.kt)("p",null,"The next diagram show the same authorized nodes. But next to those, a larger number\nof regular nodes have now joined the network as well. While regular nodes don't\nparticipate in the consensus mechanism, they do participate in the distribution\nof artifacts and transparency logs. They play a crucial role in the performance\nof the Pyrsia network."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Pyrsia component diagram",src:a(55270).Z,width:"1481",height:"1299"})),(0,i.kt)("h2",{id:"pyrsia-node-architecture"},"Pyrsia node architecture"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Pyrsia component diagram",src:a(57934).Z,width:"1661",height:"1700"})),(0,i.kt)("h3",{id:"package-type-ecosystems"},"Package type ecosystems"),(0,i.kt)("p",null,"A Pyrsia node contains several connectors to specific package type ecosystems\nlike Docker or Maven. The ecosystem connectors allow the existing tooling of a\nspecific package type to seamlessly integrate with Pyrsia. e.g. the Docker\nrepository service implements a subset of the Docker Registry API or the Java\nrepository service implements a subset of the Maven repository API."),(0,i.kt)("p",null,"The end goal of a such a service is always a frictionless integration of Pyrsia\nin the developer's workflow."),(0,i.kt)("h3",{id:"pyrsia-cli-api"},"Pyrsia CLI API"),(0,i.kt)("p",null,"The Pyrsia CLI API is the entry point into the Pyrsia node for the Pyrsia\ncommand line tool. It supports all kinds of management operations (requesting\nstatus information about the local artifact storage, information about the peers\nin the p2p network) and inspecting transparency logs."),(0,i.kt)("h3",{id:"artifact-service"},"Artifact Service"),(0,i.kt)("p",null,"The artifact service is the component that can store, retrieve and verify Pyrsia\nartifacts."),(0,i.kt)("p",null,"In the artifact consumption use cases, this component offers an abstract way of\ndealing with Pyrsia artifacts for the specific ecosystem connectors. It will\nhandle get_artifact requests and perform all necessary steps to find, retrieve\nand validate artifacts either locally or using the p2p network."),(0,i.kt)("p",null,"In the publication use cases (on authorized nodes) this component is responsible\nto drive build triggers: it will request a build from source at the Build Service,\nuse the Transparency Log Service to add an ",(0,i.kt)("inlineCode",{parentName:"p"},"add_artifact")," transaction, and when\nconsensus is reached, it will store the artifact and make it available in the p2p\nnetwork."),(0,i.kt)("h3",{id:"p2p"},"p2p"),(0,i.kt)("p",null,"The p2p component offers an interface to the peer-to-peer network. This component\nheavily relies on libp2p and bundles everything that is required to set up and\nmaintain a p2p network between Pyrsia nodes, allowing them to exchange messages,\nartifacts and transparency logs."),(0,i.kt)("h3",{id:"transparency-log-service"},"Transparency Log Service"),(0,i.kt)("p",null,"This component is used by the Artifact Service to store and retrieve transparency\nlog information about an artifact."),(0,i.kt)("p",null,"It uses the Blockchain component to retrieve transactions and to reach consensus\non the publication of new transactions. It uses a local database to store and index\ntransaction information for easy access."),(0,i.kt)("h3",{id:"blockchain"},"Blockchain"),(0,i.kt)("p",null,"This component offers an interface to store and retrieve immutable transaction\nlogs, and distribute them across all peers."),(0,i.kt)("p",null,"Before transactions can be added to the blockchain, consensus needs to be reached\nusing a fault-tolerant consensus algorithm, because:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A majority of (authorized) nodes must be able to agree to the same result"),(0,i.kt)("li",{parentName:"ul"},"A small number of faulty (authorized) nodes must not be able to influence the\nresult"),(0,i.kt)("li",{parentName:"ul"},"A small number of faulty (authorized) nodes must not be able to slow down the\nsystem or make it stop working")),(0,i.kt)("h3",{id:"build-service"},"Build service"),(0,i.kt)("p",null,"The build service is a component only used by authorized nodes. It is the entry\npoint to the authorized node's build pipeline infrastructure and takes a Transaction\nas input, including:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"the package type"),(0,i.kt)("li",{parentName:"ul"},"the source repo url")),(0,i.kt)("p",null,"Based on the package type and the build spec of the artifact, the build service\nwill then invoke a build using a suitable pipeline."),(0,i.kt)("h2",{id:"technical-stories-and-details"},"Technical stories and details"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"As a user I can use Docker client to pull an official Docker image from the Pyrsia\nnetwork."),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"a Pyrsia node handles incoming requests from a Docker client ",(0,i.kt)("strong",{parentName:"p"},"[DOCKER_REGISTRY]")),(0,i.kt)("p",{parentName:"li"},"This is the implementation of the Docker Registry API so a Docker client can\nseamlessly integrate with the Pyrsia node.")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"As a user I can use a Java build tool like Maven to download Maven artifacts\nfrom the Pyrsia network."),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"a Pyrsia node handles incoming requests from a maven client ",(0,i.kt)("strong",{parentName:"p"},"[JAVA_REPOSITORY]")),(0,i.kt)("p",{parentName:"li"},"This is the implementation of the Maven Repository API so several Java build\ntools can seamlessly integrate with the Pyrsia node.")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"When an artifact is requested, the node verifies the existence in the Pyrsia\nnetwork, and downloads it if necessary. ",(0,i.kt)("strong",{parentName:"p"},"[ARTIFACT_SERVICE]")),(0,i.kt)("p",{parentName:"li"},"When an artifact is requested, the Artifact Service  will query the transparency\nlog component. If the artifact exists (so if a log exists) the transparency log\nwill contain a reference to the required p2p file.\nThe artifact service will then lookup this file in its local storage, or download\nit from the p2p network.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Any Pyrsia node that downloaded an artifact provides that artifact on the\nnetwork for other nodes to download. ",(0,i.kt)("strong",{parentName:"p"},"[ARTIFACT_SERVICE]"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"As a user I can configure my Pyrsia node to limit the network bandwidth usage\nor even disable downloads from other nodes. ",(0,i.kt)("strong",{parentName:"p"},"[ARTIFACT_SERVICE]"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"As a Pyrsia node, I provide my locally stored artifacts in the Pyrsia network\nat boot. ",(0,i.kt)("strong",{parentName:"p"},"[ARTIFACT_SERVICE]"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"As a user behind a NAT router, my node can participate in het Pyrsia network\n",(0,i.kt)("strong",{parentName:"p"},"[P2P]")),(0,i.kt)("p",{parentName:"li"},"In order to participate in a distributed peer-to-peer network, nodes need to be\nreachable by other nodes. This can be a challenge when a node is run behind a\nNAT router. There are multiple ways of NAT traversal like TCP hole punching\nthat Pyrsia will try to accomplish. However, Pyrsia nodes will not relay\ntraffic if none of the other traversal methods worked. In that case, the\nPyrsia node can simply download artifacts from one or more of the authorized\nnodes, which will by definition always contain all the data.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"As a user I can use the Pyrsia CLI to show the transparency log. ",(0,i.kt)("strong",{parentName:"p"},"[CLI]")),(0,i.kt)("p",{parentName:"li"},"including search on author/dependencies/...")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"New authorized nodes can be added to the Pyrsia network. ",(0,i.kt)("strong",{parentName:"p"},"[CLI]"),"\n",(0,i.kt)("strong",{parentName:"p"},"[TRANSPARENCY_LOG]")," ",(0,i.kt)("strong",{parentName:"p"},"[BLOCKCHAIN]")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"As an authorized node admin I can add a candidate authorized node"),(0,i.kt)("p",{parentName:"li"},"The authorized node marks the new node id as an authorized node 'candidate'\nand creates an ",(0,i.kt)("inlineCode",{parentName:"p"},"AddNode")," transaction request and waits for consensus.\nConsensus might not be reached yet, but the authorized node keeps the\ncandidate so a future transaction request from another authorized node might\nreach consensus.")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"As a user I can request the addition of an official Docker Hub image to the\nPyrsia network. ",(0,i.kt)("strong",{parentName:"p"},"[CLI]")," ",(0,i.kt)("strong",{parentName:"p"},"[ARTIFACT_MANAGER]")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'The Pyrsia node accepts "Docker image add requests" and as a result starts\nbuild pipeline and adds a Transaction request.'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"As a user I can request a build from source of a specific artifact, so it is\nadded to the Pyrsia network ",(0,i.kt)("strong",{parentName:"p"},"[CLI]")," ",(0,i.kt)("strong",{parentName:"p"},"[ARTIFACT_MANAGER]")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'The Pyrsia node accepts " Build from source requests" and as a result\nstarts build pipeline and adds a Transaction request.'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"When a Transaction request is received all authorized nodes participate in the\nconsensus mechanism ",(0,i.kt)("strong",{parentName:"p"},"[BLOCKCHAIN]")),(0,i.kt)("p",{parentName:"li"},"Other authorized nodes validate transactions based on the transaction's operation\ntype. Examples of transaction operations:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"AddNode"),": to add a new authorized node. see 'AddNode transaction requests\nare handled'"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"RemoveNode"),": to add a new authorized node. see 'RemoveNode transaction\nrequests are handled'"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"AddArtifact"),": to add a new artifact. see 'AddArtifact transaction\nrequests are handled'"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"AddNode transaction requests are handled ",(0,i.kt)("strong",{parentName:"p"},"[BLOCKCHAIN]"),"\nan ",(0,i.kt)("inlineCode",{parentName:"p"},"AddNode")," transaction requests follows this procedure:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"was the node previously marked as an authorized node candidate?"),(0,i.kt)("li",{parentName:"ul"},"if yes, the authorized node answers positively in the consensus algorithm"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"RemoveNode transaction requests are handled ",(0,i.kt)("strong",{parentName:"p"},"[BLOCKCHAIN]")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"was the node previously marked as an authorized node candidate for removal?"),(0,i.kt)("li",{parentName:"ul"},"if yes, the authorized node answers positively in the consensus algorithm"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"AddArtifact transaction requests are handled ",(0,i.kt)("strong",{parentName:"p"},"[BLOCKCHAIN]"),"\nThe AddArtifact transaction request triggers a build verification using the\nBuild Service. The response of the Build Service defines the authorized\nnode's answer in the consensus algorithm.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"When consensus is reached, the transaction is committed to the blockchain.\n",(0,i.kt)("strong",{parentName:"p"},"[BLOCKCHAIN]")),(0,i.kt)("p",{parentName:"li"},"As a result, all nodes must receive new transactions. The authorized nodes store\nthe artifact locally and provide it in the p2p network.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"When a build is started, the Build Service finds a corresponding build pipeline\nsuitable to run the build. ",(0,i.kt)("strong",{parentName:"p"},"[BUILD_SERVICE]"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"When a build result is returned from a pipeline, the build service verifies\nthe generated build (part 1: for reproducible builds) ",(0,i.kt)("strong",{parentName:"p"},"[BUILD_SERVICE]"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"When a build result is returned from a pipeline, the build service verifies\nthe generated build by doing a semantic analysis (part 2: for non-reproducible\nbuilds) ",(0,i.kt)("strong",{parentName:"p"},"[BUILD_SERVICE]"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"On any Pyrsia node, when a new transaction is received, it is added to the\ntransparency log so it can be used in verification scenarios\n",(0,i.kt)("strong",{parentName:"p"},"[TRANSPARENCY_LOG]"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"As a Pyrsia node, I make sure the transparency log is up-to-date when I\nboot. ",(0,i.kt)("strong",{parentName:"p"},"[TRANSPARENCY_LOG]"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"As a Pyrsia node, I make sure the transparency log is kept up-to-date while\nrunning. ",(0,i.kt)("strong",{parentName:"p"},"[TRANSPARENCY_LOG]"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"As a Pyrsia node, I can download an artifact from multiple other nodes\nsimultaneously. ",(0,i.kt)("strong",{parentName:"p"},"[P2P]"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"As a user I can measure the download via Pyrsia is faster than from a central\nrepository. (benchmark) ",(0,i.kt)("strong",{parentName:"p"},"[P2P]"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"As a user I can use Docker Desktop to install Pyrsia (Docker Desktop Pyrsia)\n",(0,i.kt)("strong",{parentName:"p"},"[INSTALLATION]"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"As a user I can use a package manager on Ubuntu to install Pyrsia ",(0,i.kt)("strong",{parentName:"p"},"[INSTALLATION]")))))}h.isMDXComponent=!0},81054:function(e,t,a){t.Z=a.p+"assets/images/pyrsia-network1-fafabb5afec331d6ec7f4f42a358a3cb.png"},55270:function(e,t,a){t.Z=a.p+"assets/images/pyrsia-network2-829178860d702c11acd442a1b307fb46.png"},57934:function(e,t,a){t.Z=a.p+"assets/images/pyrsia-node-high-level-components-5fc276f487d91fac4a01e8d4587ac029.png"}}]);