(self.webpackChunkpyrsia=self.webpackChunkpyrsia||[]).push([[2072],{68746:function(e,a,t){"use strict";t.r(a),t.d(a,{assets:function(){return d},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var i=t(87462),n=t(63366),r=(t(67294),t(3905)),o=t(93456),s=["components"],l={custom_edit_url:"https://github.com/pyrsia/pyrsia/edit/main/docs/developers/pyrsia-high-level-overview.md"},c="Pyrsia high level overview for MVP",p={unversionedId:"developers/pyrsia-high-level-overview",id:"developers/pyrsia-high-level-overview",title:"Pyrsia high level overview for MVP",description:"Use cases",source:"@site/docs/developers/pyrsia-high-level-overview.md",sourceDirName:"developers",slug:"/developers/pyrsia-high-level-overview",permalink:"/docs/developers/pyrsia-high-level-overview",draft:!1,editUrl:"https://github.com/pyrsia/pyrsia/edit/main/docs/developers/pyrsia-high-level-overview.md",tags:[],version:"current",frontMatter:{custom_edit_url:"https://github.com/pyrsia/pyrsia/edit/main/docs/developers/pyrsia-high-level-overview.md"},sidebar:"tutorialSidebar",next:{title:"Get Involved",permalink:"/docs/get_involved/"}},d={},u=[{value:"Use cases",id:"use-cases",level:2},{value:"Sequence diagrams",id:"sequence-diagrams",level:2},{value:"Docker image publication",id:"docker-image-publication",level:3},{value:"Docker image retrieval",id:"docker-image-retrieval",level:3},{value:"Component architecture",id:"component-architecture",level:2},{value:"Flow",id:"flow",level:3},{value:"Artifact service",id:"artifact-service",level:3},{value:"Pyrsia CLI API",id:"pyrsia-cli-api",level:3},{value:"p2p",id:"p2p",level:3},{value:"Transparency log",id:"transparency-log",level:3},{value:"Blockchain",id:"blockchain",level:3}],h={toc:u};function m(e){var a=e.components,t=(0,n.Z)(e,s);return(0,r.kt)("wrapper",(0,i.Z)({},h,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"pyrsia-high-level-overview-for-mvp"},"Pyrsia high level overview for MVP"),(0,r.kt)("h2",{id:"use-cases"},"Use cases"),(0,r.kt)("p",null,"Pyrsia aims to support these use cases in the MVP milestone:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"An authoritative node publishes all official Docker images to a p2p network,\nin such a way that other nodes can retrieve and verify the authenticity of\nthose images."),(0,r.kt)("li",{parentName:"ol"},"A Docker client can use a locally installed Pyrsia node to pull Docker\nimages from the Pyrsia p2p network and verify the authenticity of those images."),(0,r.kt)("li",{parentName:"ol"},"A user can query the transparency log for any downloaded Docker image.")),(0,r.kt)("h2",{id:"sequence-diagrams"},"Sequence diagrams"),(0,r.kt)("h3",{id:"docker-image-publication"},"Docker image publication"),(0,r.kt)(o.Mermaid,{config:{},chart:"sequenceDiagram\nparticipant Admin as Admin User\nparticipant Node as Pyrsia Authoritative Node\nparticipant PNW as Pyrsia Network\nparticipant DockerHub as Docker Hub\n\nAdmin ->> DockerHub: list all official images\nAdmin ->> Node: Trigger publication of each official image\n\nNode ->> DockerHub: retrieve official image\nNode --\x3e> Node: Calculate hash and<br>create transaction payload\nNode ->> PNW: Add transaction to the blockchain\n\nNode ->> PNW: Publish artifact",mdxType:"Mermaid"}),(0,r.kt)("h3",{id:"docker-image-retrieval"},"Docker image retrieval"),(0,r.kt)(o.Mermaid,{chart:"sequenceDiagram\nparticipant User as User\nparticipant Docker as Docker Daemon\nparticipant Node as Pyrsia Node\nparticipant PNW as Pyrsia Network\n\nNode ->> PNW: Start listening<br>for (new) blocks\nactivate Node\nnote left of Node: Pyrsia node<br>operations\nPNW ->> Node: Receive blocks\nNode --\x3e> Node: Verify and store blocks\nNode --\x3e> Node: Index transaction payloads\ndeactivate Node\n\nUser ->> Docker: docker pull image:1.0\nactivate User\nnote left of User: Use Pyrsia node\nDocker ->> Node: request image:1.0\n\nNode ->> PNW: retrieve image from<br>the Pyrsia network\nPNW ->> Node: return image:1.0\n\nNode --\x3e> Node: Find transaction payload for image:1.0\n\nNode --\x3e> Node: Verify downloaded artifact<br>using transaction payload\n\nNode ->> Docker: return image:1.0\n\nDocker ->> User: docker pull image:1.0<br>done\n\ndeactivate User",mdxType:"Mermaid"}),(0,r.kt)("h2",{id:"component-architecture"},"Component architecture"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"green boxes: already available in the Demo milestone \\\norange boxes: new in the MVP milestone")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://github.com/pyrsia/pyrsia/raw/main/docs/developers/pyrsia-node-high-level-components.png",alt:"Pyrsia component diagram"})),(0,r.kt)("h3",{id:"flow"},"Flow"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Docker client uses Pyrsia node to pull a Docker image"),(0,r.kt)("li",{parentName:"ol"},"Using the Pyrsia CLI a user can query status information and transparency\nlog information"),(0,r.kt)("li",{parentName:"ol"},"Artifact service uses local storage as a first step to find requested images"),(0,r.kt)("li",{parentName:"ol"},"Artifact service uses the Pyrsia p2p network if the image is not found locally"),(0,r.kt)("li",{parentName:"ol"},"Artifact service uses the transparency log service to (a) add an artifact and\n(b) verify an artifact"),(0,r.kt)("li",{parentName:"ol"},"Pyrsia CLI uses Transparency log to find requested information / get logs\nfor an artifact"),(0,r.kt)("li",{parentName:"ol"},"Transparency log uses Blockchain to (a) add blocks and (b) listen for (new)\nblocks"),(0,r.kt)("li",{parentName:"ol"},"Blockchain component uses the p2p network to publish blocks"),(0,r.kt)("li",{parentName:"ol"},"Blockchain component uses the p2p network to listen for new blocks"),(0,r.kt)("li",{parentName:"ol"},"Transparency log indexes the transaction payloads by 'artifact id'"),(0,r.kt)("li",{parentName:"ol"},"Blockchain uses Block storage to store and retrieve blocks")),(0,r.kt)("h3",{id:"artifact-service"},"Artifact service"),(0,r.kt)("p",null,"This is the component that allows other clients, like a Docker client to\ncommunicate with Pyrsia to publish and retrieve artifacts. It currently only\nsupports Docker images as artifacts."),(0,r.kt)("p",null,"This component implements the Docker Registry API to allow a Docker client to\nrequest images. It uses local artifact storage as well as the p2p component to\nretrieve requested artifacts and the transparency log component to add and\nverify artifacts."),(0,r.kt)("p",null,"Interface: Docker Registry API (HTTP) \\\nPyrsia Dependencies: p2p, Transparency log"),(0,r.kt)("h3",{id:"pyrsia-cli-api"},"Pyrsia CLI API"),(0,r.kt)("p",null,"The Pyrsia CLI API is the entry point into the Pyrsia node for the Pyrsia\ncommand line tool. It supports requesting status information about the local\nartifact storage, information about the peers in the p2p network and\ntransparency log information."),(0,r.kt)("p",null,"Interface: HTTP API used by the CLI tool \\\nPyrsia Dependencies: Artifact service, Transparency Log"),(0,r.kt)("h3",{id:"p2p"},"p2p"),(0,r.kt)("p",null,"The p2p component heavily relies on libp2p and bundles everything that is\nrequired to set up and maintain a p2p network between Pyrsia nodes, allowing\nthem to exchange files. (blocks and artifacts)"),(0,r.kt)("p",null,"Interface: Rust functions to interact with the lower-level libp2p APIs \\\nPyrsia Dependencies: no other Pyrsia components"),(0,r.kt)("h3",{id:"transparency-log"},"Transparency log"),(0,r.kt)("p",null,"This component adds a logical layer on top of the blockchain component to\nallow for easy:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"transparent logging of artifact publication"),(0,r.kt)("li",{parentName:"ul"},"verification of a downloaded artifact"),(0,r.kt)("li",{parentName:"ul"},"inspection of the transparency logs")),(0,r.kt)("p",null,"Interface: add_artifact(artifact_id, artifact_hash),\nverify_artifact(artifact_id, artifact_hash), get_logs(artifact_id) \\\nPyrsia Dependencies: Blockchain"),(0,r.kt)("h3",{id:"blockchain"},"Blockchain"),(0,r.kt)("p",null,"This component offers an interface to store and retrieve immutable logs,\ndistributed across all peers."),(0,r.kt)("p",null,"Interface: add_transaction(payload, callback_listener),\nadd_block_listener(listener) \\\nPyrsia Dependencies: p2p"))}m.isMDXComponent=!0},11748:function(e,a,t){var i={"./locale":89234,"./locale.js":89234};function n(e){var a=r(e);return t(a)}function r(e){if(!t.o(i,e)){var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}return i[e]}n.keys=function(){return Object.keys(i)},n.resolve=r,e.exports=n,n.id=11748}}]);